<!DOCTYPE html>
<html lang="ar">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>تسجيل مشتركين</title>
    <link
      href="https://unpkg.com/tabulator-tables@5.5.0/dist/css/tabulator.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: "Arial", sans-serif;
        direction: rtl;
        padding: 20px;
      }
      #table {
        margin-top: 20px;
      }
      button {
        margin-top: 10px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        margin-left: 10px;
      }
    </style>
  </head>
  <body>
    <h2>تسجيل مشتركين جدد</h2>
    <div id="table"></div>
    <button onclick="addRow()">➕ إضافة صف</button>
    <button onclick="saveToSheet()">💾 حفظ إلى Google Sheet</button>

    <script src="https://unpkg.com/tabulator-tables@5.5.0/dist/js/tabulator.min.js"></script>
    <script>
      const API_URL =
        "https://script.google.com/macros/s/AKfycbyA55QGSXaJftNq-5mL0mn_DdE8KuleFA3rcsY3CYUlSZmbWm3Cjjd5ySey0oM5gpo/exec";

      const localKey = "offlineSubscribers";

      let tableData = [];

      try {
        tableData = JSON.parse(localStorage.getItem(localKey)) || [];
      } catch (e) {
        console.error("فشل في قراءة localStorage:", e);
        tableData = [];
      }

      const table = new Tabulator("#table", {
        data: tableData,
        layout: "fitColumns",
        reactiveData: true,
        columns: [
          { title: "الاسم", field: "Name", editor: "input" },
          { title: "الهوية", field: "ID", editor: "input" },
          { title: "الهاتف", field: "Phone No.", editor: "input" },
          { title: "الإيميل", field: "Email", editor: "input" },
          { title: "المهنة", field: "Profession", editor: "input" },
          { title: "المدينة", field: "City", editor: "input" },
          { title: "رقم الشريحة", field: "Chip Number", editor: "input" },
          { title: "رقم المستخدم", field: "User No.", editor: "input" },
          {
            formatter: "buttonCross",
            width: 40,
            cellClick: function (e, cell) {
              cell.getRow().delete();
              saveToLocal();
            },
          },
        ],
        cellEdited: saveToLocal,
        rowDeleted: saveToLocal,
      });

      function saveToLocal() {
        const data = table.getData();
        localStorage.setItem(localKey, JSON.stringify(data));
      }

      function addRow() {
        table.addRow({}).then(() => {
          saveToLocal();
        });
      }

      async function saveToSheet() {
        const rows = table.getData();
        if (rows.length === 0) {
          alert("لا توجد بيانات لإرسالها.");
          return;
        }

        let failed = 0;

        for (let i = 0; i < rows.length; i++) {
          const row = rows[i];

          try {
            const res = await fetch(API_URL, {
              method: "POST",
              body: JSON.stringify({ ...row, action: "add" }),
              headers: {
                "Content-Type": "application/json",
              },
            });

            const result = await res.json();
            if (result.status !== "success") {
              failed++;
              console.error("فشل في إضافة الصف:", row);
            }
          } catch (err) {
            failed++;
            console.error("خطأ في الاتصال:", err);
          }
        }

        if (failed > 0) {
          alert(`⚠️ تم الحفظ جزئيًا، ${failed} من الصفوف لم تُرسل.`);
        } else {
          alert("✅ تم حفظ كل البيانات بنجاح");
          localStorage.removeItem(localKey);
          table.clearData();
        }
      }
    </script>
  </body>
</html>
